<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatiio.org//DTD Mapper 3.0//EN"
        "http://mybatiio.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="po_lines">

    <insert id="savePoLines" parameterType="Map">
        INSERT INTO po_lines(`header_id`, `line_type_id`, `line_number`, `category_id`, `item_id`, `remark`, `price`, `quantity`,  `uom`, `amount`, `cancel_flag`, `cancel_by`, `cancel_reason`, `cancel_date`, `rcv_quantity`)
        VALUES (#{header_id}, #{line_type_id}, #{line_number}, #{category_id}, #{item_id}, #{remark}, #{price}, #{quantity},  #{uom}, #{amount}, #{cancel_flag}, #{cancel_by}, #{cancel_reason}, #{cancel_date}, #{rcv_quantity})
    </insert>

    <insert id="savePoLinesAll" parameterType="java.util.List">
        INSERT INTO po_lines(`header_id`, `line_type_id`, `line_number`, `category_id`, `item_id`, `remark`, `price`, `quantity`, `uom`, `amount`, `cancel_flag`, `cancel_by`, `cancel_reason`, `cancel_date`, `rcv_quantity`) VALUES
        <foreach collection="list" index="index" item="item" separator="," >
            (#{item.header_id}, #{item.line_type_id}, #{item.line_number}, #{item.category_id}, #{item.item_id}, #{item.remark}, #{item.price}, #{item.quantity},  #{item.uom}, #{item.amount}, #{item.cancel_flag}, #{item.cancel_by}, #{item.cancel_reason}, #{item.cancel_date}, #{item.rcv_quantity})
        </foreach>
    </insert>

    <select id="getPoLinesByHeaderId" resultType="Map" parameterType="Map">
        SELECT pl.*,(pl.quantity - pl.rcv_quantity) as not_rcv_quantity,mi.*,mic.category_name FROM po_lines pl
        LEFT JOIN mdm_item mi on pl.item_id = mi.item_id
        LEFT JOIN mdm_item_category mic on  pl.category_id = mic.category_id
        where header_id=#{header_id}
        order by line_number asc
    </select>

    <delete id="deleteByHeaderIds" parameterType="Map">
        delete from po_lines where header_id in (${ids})
    </delete>


    <delete id="deleteByIds" parameterType="Map">
        delete from po_lines where line_id in (${ids})
    </delete>

    <update id="updatePoLinesById" parameterType="Map">
        update po_lines
        <trim prefix="set" suffixOverrides=",">
            <if test="header_id!=null">header_id=#{header_id},</if>
            <if test="line_type_id!=null">line_type_id=#{line_type_id},</if>
            <if test="line_number!=null">line_number=#{line_number},</if>
            <if test="category_id!=null">category_id=#{category_id},</if>
            <if test="item_id!=null">item_id=#{item_id},</if>
            <if test="remark!=null">remark=#{remark},</if>
            <if test="price!=null">price=#{price},</if>
            <if test="quantity!=null">quantity=#{quantity},</if>
            <if test="uom!=null">uom=#{uom},</if>
            <if test="amount!=null">amount=#{amount},</if>
            <if test="cancel_flag!=null">cancel_flag=#{cancel_flag},</if>
            <if test="cancel_by!=null">cancel_by=#{cancel_by},</if>
            <if test="cancel_reason!=null">cancel_reason=#{cancel_reason},</if>
            <if test="cancel_date!=null">cancel_date=#{cancel_date},</if>
            <if test="rcv_quantity!=null">rcv_quantity=#{rcv_quantity},</if>
        </trim>
        where line_id=#{line_id}

    </update>


    <update id="updatePoLinesRcvQuantity" parameterType="Map">
        update po_lines
        set rcv_quantity=(rcv_quantity+#{rcv_quantity})
        where header_id=#{header_id} and item_id=#{item_id}

    </update>



</mapper>

